"""renomeia password para hashed_password

Revision ID: f98a53e9a0d4
Revises: 7d350c8b2688
Create Date: 2025-10-31 16:35:08.678157

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f98a53e9a0d4'
down_revision: Union[str, Sequence[str], None] = '7d350c8b2688'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usuarios10')
    op.drop_table('credenciais')
    op.drop_table('cliente1')
    op.drop_index(op.f('ix_receitas_id'), table_name='receitas')
    op.drop_table('receitas')
    op.drop_index(op.f('ix_usuario5_id'), table_name='usuario5')
    op.drop_index(op.f('ix_usuario5_nome'), table_name='usuario5')
    op.drop_table('usuario5')
    op.drop_index(op.f('ix_usuario10_id'), table_name='usuario10')
    op.drop_table('usuario10')
    op.drop_index(op.f('ix_token2_id'), table_name='token2')
    op.drop_index(op.f('ix_token2_token'), table_name='token2')
    op.drop_table('token2')
    op.drop_index(op.f('ix_usuario2_id'), table_name='usuario2')
    op.drop_index(op.f('ix_usuario2_nome'), table_name='usuario2')
    op.drop_table('usuario2')
    op.drop_index(op.f('ix_tarefa10_id'), table_name='tarefa10')
    op.drop_table('tarefa10')
    op.drop_index(op.f('ix_usuarios_id'), table_name='usuarios')
    op.drop_index(op.f('ix_usuarios_nome'), table_name='usuarios')
    op.drop_table('usuarios')
    op.drop_index(op.f('ix_cliente_id'), table_name='cliente')
    op.drop_table('cliente')
    op.add_column('users', sa.Column('hashed_password', sa.String(), nullable=True))
    op.drop_column('users', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('users', 'hashed_password')
    op.create_table('cliente',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('cliente_pkey'))
    )
    op.create_index(op.f('ix_cliente_id'), 'cliente', ['id'], unique=False)
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usuarios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
    sa.UniqueConstraint('email', name='usuarios_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_usuarios_nome'), 'usuarios', ['nome'], unique=True)
    op.create_index(op.f('ix_usuarios_id'), 'usuarios', ['id'], unique=False)
    op.create_table('tarefa10',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titulo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('descricao', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('tarefa10_pkey'))
    )
    op.create_index(op.f('ix_tarefa10_id'), 'tarefa10', ['id'], unique=False)
    op.create_table('usuario2',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usuario2_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('senha_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usuario2_pkey'),
    sa.UniqueConstraint('email', name='usuario2_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_usuario2_nome'), 'usuario2', ['nome'], unique=True)
    op.create_index(op.f('ix_usuario2_id'), 'usuario2', ['id'], unique=False)
    op.create_table('token2',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario2.id'], name=op.f('token2_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('token2_pkey'))
    )
    op.create_index(op.f('ix_token2_token'), 'token2', ['token'], unique=True)
    op.create_index(op.f('ix_token2_id'), 'token2', ['id'], unique=False)
    op.create_table('usuario10',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('usuario10_pkey'))
    )
    op.create_index(op.f('ix_usuario10_id'), 'usuario10', ['id'], unique=False)
    op.create_table('usuario5',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('idade', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('usuario5_pkey')),
    sa.UniqueConstraint('email', name=op.f('usuario5_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_usuario5_nome'), 'usuario5', ['nome'], unique=True)
    op.create_index(op.f('ix_usuario5_id'), 'usuario5', ['id'], unique=False)
    op.create_table('receitas',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome_da_receita', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ingredientes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('modo_de_preparo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('receitas_pkey'))
    )
    op.create_index(op.f('ix_receitas_id'), 'receitas', ['id'], unique=False)
    op.create_table('cliente1',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('cliente1_pkey'))
    )
    op.create_table('credenciais',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('senha_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], name=op.f('credenciais_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('credenciais_pkey')),
    sa.UniqueConstraint('usuario_id', name=op.f('credenciais_usuario_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('usuarios10',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('usuarios10_pkey'))
    )
    # ### end Alembic commands ###
